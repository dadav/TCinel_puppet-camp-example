
With a practically empty nexus3_repository.rb type file, this is what we get with `puppet resource`:

```
▶ RUBYLIB=$(pwd)/lib puppet resource nexus3_repository --debug
Debug: Runtime environment: puppet_version=3.8.4, ruby_version=2.0.0, run_mode=user, default_encoding=UTF-8
Error: Could not run: nexus3_repository has no providers and has not overridden 'instances'
```

And this for `puppet apply`:

```
▶ RUBYLIB=$(pwd)/lib puppet apply -e "nexus3_repository {'blah': }"
Notice: Compiled catalog for tcinel.home.timcinel.com in environment production in 0.01 seconds
Error: No set of title patterns matched the title "blah".
```


Now, with a namevar specified in the type class, `puppet apply` works:

```
▶ RUBYLIB=$(pwd)/lib puppet apply -e "nexus3_repository {'blah': }"
Notice: Compiled catalog for tcinel.home.timcinel.com in environment production in 0.01 seconds
Notice: Finished catalog run in 0.03 seconds
```

Made nexus3_repository ensurable, which breaks puppet apply again:

▶ RUBYLIB=$(pwd)/lib puppet apply -e "nexus3_repository {'blah': }"
Notice: Compiled catalog for tcinel.home.timcinel.com in environment production in 0.01 seconds
Error: /Stage[main]/Main/Nexus3_repository[blah]: Could not evaluate: No ability to determine if nexus3_repository exists
Notice: Finished catalog run in 0.03 seconds


Before implementing the provider, we refactored the utility classes so they can be conveniently used by a provider.


Implemented bare minimum required to use 'puppet resource' in the nexus3_repository provider. It works now:

▶ RUBYLIB=/Users/tcinel/build/puppet-camp/lib puppet resource nexus3_repository
nexus3_repository { 'blahblah':
  ensure => 'present',
}
nexus3_repository { 'maven-releases':
  ensure => 'present',
}
nexus3_repository { 'maven-snapshots':
  ensure => 'present',
}
